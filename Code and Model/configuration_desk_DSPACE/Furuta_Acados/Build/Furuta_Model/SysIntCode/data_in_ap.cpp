/****************************************************************************\ 
 *** 
 *** File                  : data_in_ap.cpp
 *** 
 *** Generated by dSPACE Tools.
 *** (c) Copyright 2013, dSPACE GmbH. All rights reserved.
\****************************************************************************/

#if !defined(DATA_IN_AP_CPP_)
#  define    DATA_IN_AP_CPP_


/* -- Include directives. -- */
#  include "IOCode_Data.h"
#  include <DsApplicationInterface.h>
#  include "string.h"
#  include "data_in_ap.h"

#  if defined(EXTERN_C_DECL)
#    undef EXTERN_C_DECL
#  endif
#  if defined(__cplusplus)
#    define EXTERN_C_DECL extern "C"
#  else
#    define EXTERN_C_DECL extern
#  endif


/* -- Variable declarations in module scope. -- */

/* Pragma to suppress GCC stack reuse which leads to problems with signal chain code */
#ifdef __GNUC__
#pragma GCC optimize "-fstack-reuse=none"
#endif

/* -- Definitions of exported functions. -- */

  void
ap_read_Furuta_Model_DataInport3_P1_S1(
    Float64* x) 
{
/* ModelPort:{Current_Sensor.Voltage}, PortId:{e20d8ff1-f905-4273-8ec5-4042e75d6105} */
dsfloat localVariable_1;
{
localVariable_1 = pVoltage_In_1_DriverHandle->getInputValue(ErrorList);
}
{
    *x = localVariable_1;
}

}

  void
ap_read_Furuta_Model_DataInport1_P1_S1(
    Float64* x) 
{
/* ModelPort:{Enc_1.Speed (Rotary)}, PortId:{640344fd-7088-4d66-828d-406be9e46a9a} */
dsfloat localVariable_1;
{
localVariable_1 = pDigital_Incremental_Encoder_In_2_DriverHandle->getSpeed(ErrorList);
}
{
    *x = localVariable_1;
}

}

  void
ap_read_Furuta_Model_DataInport1_P2_S1(
    Float64* x) 
{
/* ModelPort:{Enc_1.Position (Rotary)}, PortId:{f41eff98-ab4f-4f5a-b741-4dfa8486b01f} */
dsfloat localVariable_1;
{
localVariable_1 = pDigital_Incremental_Encoder_In_2_DriverHandle->getPosition(ErrorList);
}
{
    *x = localVariable_1;
}

}

  void
ap_read_Furuta_Model_DataInport1_P3_S1(
    Float64* x) 
{
/* ModelPort:{Enc_1.Position Valid}, PortId:{af830440-76be-4c05-a08e-eefdfbf4871e} */
Bool localVariable_1;
{
localVariable_1 = pDigital_Incremental_Encoder_In_2_DriverHandle->getPositionValid(ErrorList);
}
{
    *x = (double)localVariable_1;
}

}

  void
ap_read_Furuta_Model_DataInport2_P1_S1(
    Float64* x) 
{
/* ModelPort:{Enc_2.Speed (Rotary)}, PortId:{49302566-356f-49bf-98bb-9aa6fb4e191b} */
dsfloat localVariable_1;
{
localVariable_1 = pDigital_Incremental_Encoder_In_1_DriverHandle->getSpeed(ErrorList);
}
{
    *x = localVariable_1;
}

}

  void
ap_read_Furuta_Model_DataInport2_P2_S1(
    Float64* x) 
{
/* ModelPort:{Enc_2.Position (Rotary)}, PortId:{f31ab410-41a0-445c-9301-5feda3504579} */
dsfloat localVariable_1;
{
localVariable_1 = pDigital_Incremental_Encoder_In_1_DriverHandle->getPosition(ErrorList);
}
{
    *x = localVariable_1;
}

}

  void
ap_read_Furuta_Model_DataInport2_P3_S1(
    Float64* x) 
{
/* ModelPort:{Enc_2.Position Valid}, PortId:{b22d9c4c-e6f3-4bfe-8bb5-6e4393d82da2} */
Bool localVariable_1;
{
localVariable_1 = pDigital_Incremental_Encoder_In_1_DriverHandle->getPositionValid(ErrorList);
}
{
    *x = (double)localVariable_1;
}

}

#endif                                 /* DATA_IN_AP_CPP_ */
/* [EOF] */
